version: '3.9'

services:
  auth_db:
    image: postgres:17
    container_name: auth_db
    restart: always
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    volumes:
      - auth_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  auth-server:
    build: ./auth_server
    container_name: auth-server
    restart: always
    volumes:
      - ./auth_server:/app
      - ./auth_server/keys:/app/keys:ro
    ports:
      - "8000:8000"
    env_file:
      - ./auth_server/.env
    depends_on:
      auth_db:
        condition: service_healthy

  backend_db:
    image: postgres:17
    container_name: backend_db
    restart: always
    environment:
      POSTGRES_DB: backend_db
      POSTGRES_USER: backend_user
      POSTGRES_PASSWORD: backend_pass
    volumes:
      - backend_db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U backend_user -d backend_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  backend_server:
    build: ./backend_server
    container_name: backend_server
    restart: always
    volumes:
      - ./backend_server:/app
    ports:
      - "8001:8001"
    env_file:
      - ./backend_server/.env
    depends_on:
      backend_db:
        condition: service_healthy
      auth-server:
        condition: service_started

volumes:
  auth_db:
  backend_db:
